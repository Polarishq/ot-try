// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Rest API definition for ot-try",
    "title": "ot-try",
    "version": "v1"
  },
  "host": "ot-try-v1",
  "basePath": "/",
  "paths": {
    "/cleanup": {
      "post": {
        "description": "Endpoint to be called during test teardown.  It will execute all cleanups necessary after a test run\n",
        "tags": [
          "Cleanup"
        ],
        "summary": "Endpoint to execute all cleanups necessary after a test run",
        "operationId": "cleanup",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Performs detailed internal checks and reports back whether or not the service is operating properly\nhttps://confluence.splunk.com/display/PROD/Common+Microservice+Endpoints+and+Version+Management\n",
        "tags": [
          "Health"
        ],
        "summary": "UNVERSIONED Health check endpoint. Required for all services",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Service is operating normally",
            "schema": {
              "$ref": "#/definitions/Health"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "description": "Optional list of field names which caused the error",
          "type": "string"
        },
        "message": {
          "description": "A brief description of the error",
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "required": [
        "healthy",
        "stub",
        "revision",
        "service_info"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        },
        "healthy": {
          "description": "Flag indicating whether or not ALL internal checks passed",
          "type": "boolean"
        },
        "revision": {
          "description": "Microservice revision",
          "type": "string"
        },
        "service_info": {
          "$ref": "#/definitions/ServiceInfo"
        },
        "stub": {
          "description": "Flag indicating whether or not this service is live or stubbed",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ServiceInfo": {
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        },
        "name": {
          "description": "Service name",
          "type": "string"
        },
        "version": {
          "description": "Service API version",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Rest API definition for ot-try",
    "title": "ot-try",
    "version": "v1"
  },
  "host": "ot-try-v1",
  "basePath": "/",
  "paths": {
    "/cleanup": {
      "post": {
        "description": "Endpoint to be called during test teardown.  It will execute all cleanups necessary after a test run\n",
        "tags": [
          "Cleanup"
        ],
        "summary": "Endpoint to execute all cleanups necessary after a test run",
        "operationId": "cleanup",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
                  "type": "integer",
                  "format": "int32"
                },
                "fields": {
                  "description": "Optional list of field names which caused the error",
                  "type": "string"
                },
                "message": {
                  "description": "A brief description of the error",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Performs detailed internal checks and reports back whether or not the service is operating properly\nhttps://confluence.splunk.com/display/PROD/Common+Microservice+Endpoints+and+Version+Management\n",
        "tags": [
          "Health"
        ],
        "summary": "UNVERSIONED Health check endpoint. Required for all services",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "Service is operating normally",
            "schema": {
              "type": "object",
              "required": [
                "healthy",
                "stub",
                "revision",
                "service_info"
              ],
              "properties": {
                "error": {
                  "type": "object",
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
                      "type": "integer",
                      "format": "int32"
                    },
                    "fields": {
                      "description": "Optional list of field names which caused the error",
                      "type": "string"
                    },
                    "message": {
                      "description": "A brief description of the error",
                      "type": "string"
                    }
                  }
                },
                "healthy": {
                  "description": "Flag indicating whether or not ALL internal checks passed",
                  "type": "boolean"
                },
                "revision": {
                  "description": "Microservice revision",
                  "type": "string"
                },
                "service_info": {
                  "type": "object",
                  "required": [
                    "name",
                    "version"
                  ],
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code"
                      ],
                      "properties": {
                        "code": {
                          "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
                          "type": "integer",
                          "format": "int32"
                        },
                        "fields": {
                          "description": "Optional list of field names which caused the error",
                          "type": "string"
                        },
                        "message": {
                          "description": "A brief description of the error",
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "description": "Service name",
                      "type": "string"
                    },
                    "version": {
                      "description": "Service API version",
                      "type": "string"
                    }
                  }
                },
                "stub": {
                  "description": "Flag indicating whether or not this service is live or stubbed",
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
                  "type": "integer",
                  "format": "int32"
                },
                "fields": {
                  "description": "Optional list of field names which caused the error",
                  "type": "string"
                },
                "message": {
                  "description": "A brief description of the error",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "description": "Optional list of field names which caused the error",
          "type": "string"
        },
        "message": {
          "description": "A brief description of the error",
          "type": "string"
        }
      }
    },
    "Health": {
      "type": "object",
      "required": [
        "healthy",
        "stub",
        "revision",
        "service_info"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
              "type": "integer",
              "format": "int32"
            },
            "fields": {
              "description": "Optional list of field names which caused the error",
              "type": "string"
            },
            "message": {
              "description": "A brief description of the error",
              "type": "string"
            }
          }
        },
        "healthy": {
          "description": "Flag indicating whether or not ALL internal checks passed",
          "type": "boolean"
        },
        "revision": {
          "description": "Microservice revision",
          "type": "string"
        },
        "service_info": {
          "type": "object",
          "required": [
            "name",
            "version"
          ],
          "properties": {
            "error": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
                  "type": "integer",
                  "format": "int32"
                },
                "fields": {
                  "description": "Optional list of field names which caused the error",
                  "type": "string"
                },
                "message": {
                  "description": "A brief description of the error",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Service name",
              "type": "string"
            },
            "version": {
              "description": "Service API version",
              "type": "string"
            }
          }
        },
        "stub": {
          "description": "Flag indicating whether or not this service is live or stubbed",
          "type": "boolean",
          "default": false
        }
      }
    },
    "ServiceInfo": {
      "type": "object",
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code"
          ],
          "properties": {
            "code": {
              "description": "Internal error code. In generic error cases this may be a HTTP status code.\nTherefore internal error codes should not conflict with HTTP status codes.\n",
              "type": "integer",
              "format": "int32"
            },
            "fields": {
              "description": "Optional list of field names which caused the error",
              "type": "string"
            },
            "message": {
              "description": "A brief description of the error",
              "type": "string"
            }
          }
        },
        "name": {
          "description": "Service name",
          "type": "string"
        },
        "version": {
          "description": "Service API version",
          "type": "string"
        }
      }
    }
  }
}`))
}
